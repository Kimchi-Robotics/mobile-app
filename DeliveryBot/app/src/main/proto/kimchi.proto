// Copyright 2025 Kimchi Robotics
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.kimchi.grpc";
option java_outer_classname = "KimchiProto";

package kimchi;

enum RobotStateEnum {
  NO_MAP = 0;
  MAPPING_WITH_EXPLORATION = 1;
  MAPPING_WITH_TELEOP = 2;
  NAVIGATING = 3;
  LOCATING = 4;
  TELEOP = 5;
  IDLE = 6;
  LOST = 7;
  RECOVERING = 8;
  GOAL_REACHED = 9;
  CHARGING = 10;
}

// Methods to communicate from the Kimchi App to the kimchi robot.
service KimchiApp {
  rpc IsAlive (Empty) returns (IsAliveResponse) {}
  rpc Move (stream Velocity) returns (Empty) {}
  rpc GetMap (Empty) returns (Map) {}
  rpc GetRobotState (Empty) returns (RobotStateMsg) {}
  rpc StartMapping(Empty) returns (StartMappingResponse) {}
  rpc StartNavigation(Empty) returns (StartNavigationResponse) {}
  rpc SendSelectedPose(Pose) returns (Empty) {}

  // Stream subscriptions
  rpc SubscribeToMap(Empty) returns (stream Map) {}
  rpc SubscribeToRobotState (Empty) returns (stream RobotStateMsg) {}
  rpc GetPose (Empty) returns (stream Pose) {}
}

message IsAliveResponse {
  bool alive = 1;
}

message StartMappingResponse {
  bool success = 1;
  string info = 2;
}

message StartNavigationResponse {
  bool success = 1;
  string info = 2;
}

message RobotStateMsg {
  RobotStateEnum state = 1;
}

message Pose {
  float x = 1;
  float y = 2;
  float theta = 3;
}

message Velocity {
  float linear = 1;
  float angular = 2;
}

message Map {
  bytes image = 1;
  Pose origin = 2;
  float resolution = 3;
}

message Empty {

}
