// Copyright 2025 Kimchi Robotics
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.kimchi.grpc";
option java_outer_classname = "KimchiProto";

package kimchi;

// Methods to communicate from the Kimchi App to the kimchi robot.
service KimchiApp {
  rpc IsAlive (Empty) returns (IsAliveResponse) {}
  rpc GetPose (Empty) returns (stream Pose) {}
  rpc Move (stream Velocity) returns (Empty) {}
  rpc GetMap (Empty) returns (Map) {}
}

message IsAliveResponse {
  bool alive = 1;
}

message Pose {
  float x = 1;
  float y = 2;
  float theta = 3;
}

message Velocity {
  float linear = 1;
  float angular = 2;
}

message Map {
  bytes image = 1;
  Pose origin = 2;
  float resolution = 3;
}

message Empty {

}

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (stream HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
  string num_greetings = 2;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
